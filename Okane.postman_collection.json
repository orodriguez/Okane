{
	"info": {
		"_postman_id": "f5e07d45-0995-4669-b61e-bc29d0ab3c1c",
		"name": "Okane",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2402593"
	},
	"item": [
		{
			"name": "Sign Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"createdUserId\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set('userEmail', 'user' + new Date().getTime() + \"@mail.com\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/auth/signup",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"token\", pm.response.json().token);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertaiment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{userEmail}}\",\n    \"password\": \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/auth/token",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"createdExpenseId\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertainment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"{{Category}}\",\n    \"amount\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create - CategoryName does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertaiment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"Unknown\",\n    \"amount\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create with Description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertainment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"{{Category}}\",\n    \"amount\": 10,\n    \"description\": \"Some description\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create with InvoiceUrl",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertainment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"{{Category}}\",\n    \"amount\": 10,\n    \"description\": \"Some description\",\n    \"invoiceUrl\": \"http://invoice.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create - Bad Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertaiment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"kllskdjflsdkjflsdkjflskfdjslkfjdlksfjlksadasdasdasdasdasdasdsadasdsaksdlfkgjsl;dfkgjsl;kfdjg;lskfjgl;skjfglk\",\n    \"amount\": 0,\n    \"invoiceUrl\": \"http/bad:url\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Swagger",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "http://localhost:5103/swagger/v1/swagger.json",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"swagger",
						"v1",
						"swagger.json"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5103/expenses",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		},
		{
			"name": "By Category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5103/expenses?Category=Food",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses"
					],
					"query": [
						{
							"key": "Category",
							"value": "Food"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5103/expenses/{{createdExpenseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses",
						"{{createdExpenseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ById - 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5103/expenses/12312313",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses",
						"12312313"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"createdExpenseId\", pm.response.json().id);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertaiment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"Food\",\n    \"amount\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses/{{createdExpenseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses",
						"{{createdExpenseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update - Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertaiment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"Food\",\n    \"amount\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses/-50",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses",
						"-50"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update - Unknow Category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var categories = ['Food', 'Entertaiment', 'Taxes'];",
							"",
							"pm.environment.set('Category', categories[Math.floor(Math.random() * categories.length)]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryName\": \"ASDASD\",\n    \"amount\": 100\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5103/expenses/{{createdExpenseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses",
						"{{createdExpenseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5103/expenses/{{createdExpenseId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses",
						"{{createdExpenseId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete - 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5103/expenses/-1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5103",
					"path": [
						"expenses",
						"-1"
					]
				}
			},
			"response": []
		}
	]
}